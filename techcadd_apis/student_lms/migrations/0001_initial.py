# Generated by Django 4.2.25 on 2025-10-31 05:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('staff_app', '0008_paymenttransaction'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='staff_app.course')),
            ],
            options={
                'verbose_name': 'Course Module',
                'verbose_name_plural': 'Course Modules',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('lesson_type', models.CharField(choices=[('video', 'Video'), ('document', 'Document'), ('quiz', 'Quiz'), ('assignment', 'Assignment'), ('live_class', 'Live Class'), ('text', 'Text Content')], default='video', max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('video_url', models.URLField(blank=True, help_text='YouTube, Vimeo, or direct video URL', null=True)),
                ('document_file', models.FileField(blank=True, null=True, upload_to='lessons/documents/')),
                ('text_content', models.TextField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=0, help_text='Lesson duration in minutes')),
                ('is_free_preview', models.BooleanField(default=False, help_text='Allow preview without enrollment')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='student_lms.coursemodule')),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='StudentNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_text', models.TextField()),
                ('timestamp_seconds', models.PositiveIntegerField(default=0, help_text='Time in lesson when note was taken')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_notes', to='student_lms.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='staff_app.studentregistration')),
            ],
            options={
                'verbose_name': 'Student Note',
                'verbose_name_plural': 'Student Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='not_started', max_length=20)),
                ('time_spent_minutes', models.PositiveIntegerField(default=0)),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='student_lms.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='staff_app.studentregistration')),
            ],
            options={
                'verbose_name': 'Student Progress',
                'verbose_name_plural': 'Student Progress',
                'unique_together': {('student', 'lesson')},
            },
        ),
    ]
